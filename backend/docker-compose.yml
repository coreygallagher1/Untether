
services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./services/user/migrations:/migrations/user
      - ./services/plaid/migrations:/migrations/plaid
      - ./services/transaction/migrations:/migrations/transaction
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U untether"]
      interval: 5s
      timeout: 5s
      retries: 5
    command: >
      sh -c "apk add --no-cache curl &&
             curl -L https://github.com/golang-migrate/migrate/releases/download/v4.16.2/migrate.linux-amd64.tar.gz | tar xvz &&
             mv migrate /usr/local/bin/migrate &&
             docker-entrypoint.sh postgres"
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - backend

  user:
    build:
      context: .
      dockerfile: services/user/Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - GRPC_PORT=50052
      - HTTP_PORT=8081
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
      - PLAID_CLIENT_SECRET=${PLAID_CLIENT_SECRET}
      - PLAID_ENVIRONMENT=${PLAID_ENVIRONMENT}
    ports:
      - "50052:50052"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend

  plaid:
    build:
      context: .
      dockerfile: services/plaid/Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
      - PLAID_CLIENT_SECRET=${PLAID_CLIENT_SECRET}
      - PLAID_ENVIRONMENT=${PLAID_ENVIRONMENT}
      - GRPC_PORT=50053
      - HTTP_PORT=8082
    ports:
      - "50053:50053"
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend

  transaction:
    build:
      context: .
      dockerfile: services/transaction/Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - GRPC_PORT=50054
      - HTTP_PORT=8083
    ports:
      - "50054:50054"
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - backend

volumes:
  postgres_data:
  zookeeper_data:
  kafka_data:

networks:
  backend:
    driver: bridge 