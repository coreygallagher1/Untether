// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: transaction.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CalculateRoundupRequest contains the transaction details needed for roundup calculation
type CalculateRoundupRequest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Amount               float64                `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	RoundingRule         string                 `protobuf:"bytes,2,opt,name=rounding_rule,json=roundingRule,proto3" json:"rounding_rule,omitempty"`                             // e.g., "dollar", "quarter", "custom"
	CustomRoundingAmount float64                `protobuf:"fixed64,3,opt,name=custom_rounding_amount,json=customRoundingAmount,proto3" json:"custom_rounding_amount,omitempty"` // Optional, used when rounding_rule is "custom"
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CalculateRoundupRequest) Reset() {
	*x = CalculateRoundupRequest{}
	mi := &file_transaction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateRoundupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRoundupRequest) ProtoMessage() {}

func (x *CalculateRoundupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRoundupRequest.ProtoReflect.Descriptor instead.
func (*CalculateRoundupRequest) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *CalculateRoundupRequest) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CalculateRoundupRequest) GetRoundingRule() string {
	if x != nil {
		return x.RoundingRule
	}
	return ""
}

func (x *CalculateRoundupRequest) GetCustomRoundingAmount() float64 {
	if x != nil {
		return x.CustomRoundingAmount
	}
	return 0
}

// CalculateRoundupResponse contains the calculated roundup amount
type CalculateRoundupResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OriginalAmount   float64                `protobuf:"fixed64,1,opt,name=original_amount,json=originalAmount,proto3" json:"original_amount,omitempty"`
	RoundedAmount    float64                `protobuf:"fixed64,2,opt,name=rounded_amount,json=roundedAmount,proto3" json:"rounded_amount,omitempty"`
	RoundupAmount    float64                `protobuf:"fixed64,3,opt,name=roundup_amount,json=roundupAmount,proto3" json:"roundup_amount,omitempty"`
	RoundingRuleUsed string                 `protobuf:"bytes,4,opt,name=rounding_rule_used,json=roundingRuleUsed,proto3" json:"rounding_rule_used,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CalculateRoundupResponse) Reset() {
	*x = CalculateRoundupResponse{}
	mi := &file_transaction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateRoundupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRoundupResponse) ProtoMessage() {}

func (x *CalculateRoundupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRoundupResponse.ProtoReflect.Descriptor instead.
func (*CalculateRoundupResponse) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *CalculateRoundupResponse) GetOriginalAmount() float64 {
	if x != nil {
		return x.OriginalAmount
	}
	return 0
}

func (x *CalculateRoundupResponse) GetRoundedAmount() float64 {
	if x != nil {
		return x.RoundedAmount
	}
	return 0
}

func (x *CalculateRoundupResponse) GetRoundupAmount() float64 {
	if x != nil {
		return x.RoundupAmount
	}
	return 0
}

func (x *CalculateRoundupResponse) GetRoundingRuleUsed() string {
	if x != nil {
		return x.RoundingRuleUsed
	}
	return ""
}

var File_transaction_proto protoreflect.FileDescriptor

const file_transaction_proto_rawDesc = "" +
	"\n" +
	"\x11transaction.proto\x12\vtransaction\"\x8c\x01\n" +
	"\x17CalculateRoundupRequest\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\x01R\x06amount\x12#\n" +
	"\rrounding_rule\x18\x02 \x01(\tR\froundingRule\x124\n" +
	"\x16custom_rounding_amount\x18\x03 \x01(\x01R\x14customRoundingAmount\"\xbf\x01\n" +
	"\x18CalculateRoundupResponse\x12'\n" +
	"\x0foriginal_amount\x18\x01 \x01(\x01R\x0eoriginalAmount\x12%\n" +
	"\x0erounded_amount\x18\x02 \x01(\x01R\rroundedAmount\x12%\n" +
	"\x0eroundup_amount\x18\x03 \x01(\x01R\rroundupAmount\x12,\n" +
	"\x12rounding_rule_used\x18\x04 \x01(\tR\x10roundingRuleUsed2z\n" +
	"\x15TransactionCalculator\x12a\n" +
	"\x10CalculateRoundup\x12$.transaction.CalculateRoundupRequest\x1a%.transaction.CalculateRoundupResponse\"\x00B%Z#untether/services/transaction/protob\x06proto3"

var (
	file_transaction_proto_rawDescOnce sync.Once
	file_transaction_proto_rawDescData []byte
)

func file_transaction_proto_rawDescGZIP() []byte {
	file_transaction_proto_rawDescOnce.Do(func() {
		file_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_transaction_proto_rawDesc), len(file_transaction_proto_rawDesc)))
	})
	return file_transaction_proto_rawDescData
}

var file_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_transaction_proto_goTypes = []any{
	(*CalculateRoundupRequest)(nil),  // 0: transaction.CalculateRoundupRequest
	(*CalculateRoundupResponse)(nil), // 1: transaction.CalculateRoundupResponse
}
var file_transaction_proto_depIdxs = []int32{
	0, // 0: transaction.TransactionCalculator.CalculateRoundup:input_type -> transaction.CalculateRoundupRequest
	1, // 1: transaction.TransactionCalculator.CalculateRoundup:output_type -> transaction.CalculateRoundupResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_transaction_proto_init() }
func file_transaction_proto_init() {
	if File_transaction_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_transaction_proto_rawDesc), len(file_transaction_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transaction_proto_goTypes,
		DependencyIndexes: file_transaction_proto_depIdxs,
		MessageInfos:      file_transaction_proto_msgTypes,
	}.Build()
	File_transaction_proto = out.File
	file_transaction_proto_goTypes = nil
	file_transaction_proto_depIdxs = nil
}
